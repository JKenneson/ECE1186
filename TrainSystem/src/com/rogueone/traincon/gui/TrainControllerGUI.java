/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rogueone.traincon.gui;

import com.rogueone.traincon.TrainController;
import com.rogueone.trainmodel.TrainModel;
import com.rogueone.trainmodel.entities.TrainFailures;
import javax.swing.ImageIcon;

/**
 *
 * @author kylemonto
 */
public class TrainControllerGUI extends javax.swing.JPanel {
    
    //This is to call the main Train Model class's methods while using the GUI
    TrainController trainController;

    /**
     * Creates new form TrainControllerGUI
     */
    public TrainControllerGUI() {
        initComponents();
        //this.trainController = new TrainController(new TrainModel(40, 500, 1), this, (byte) 50, (short) 200, 500, "123", "G", "AA", "13"); //for testing purposes
    }

    public TrainControllerGUI(TrainController tc) {
        initComponents();
        this.trainController = tc;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ACGroup = new javax.swing.ButtonGroup();
        LightsGroup = new javax.swing.ButtonGroup();
        RightDoorGroup = new javax.swing.ButtonGroup();
        LeftDoorGroup = new javax.swing.ButtonGroup();
        HeatGroup = new javax.swing.ButtonGroup();
        ModeGroup = new javax.swing.ButtonGroup();
        TrainControlsPanel = new javax.swing.JPanel();
        ControlsAC = new javax.swing.JPanel();
        ACOn = new javax.swing.JRadioButton();
        ACOff = new javax.swing.JRadioButton();
        ControlsLights = new javax.swing.JPanel();
        LightsOn = new javax.swing.JRadioButton();
        LightsOff = new javax.swing.JRadioButton();
        ControlsLeftDoor = new javax.swing.JPanel();
        LeftDoorOpened = new javax.swing.JRadioButton();
        LeftDoorClosed = new javax.swing.JRadioButton();
        ControlsRightDoor = new javax.swing.JPanel();
        RightDoorClosed = new javax.swing.JRadioButton();
        RightDoorOpened = new javax.swing.JRadioButton();
        SpeedInput = new javax.swing.JSpinner();
        SetSpeed = new javax.swing.JButton();
        ControlsSystemMode = new javax.swing.JPanel();
        ManualModeSelect = new javax.swing.JRadioButton();
        AutoModeSelect = new javax.swing.JRadioButton();
        ControlMPHLabel = new javax.swing.JLabel();
        AnnouncementText = new javax.swing.JTextField();
        SendAnnouncement = new javax.swing.JButton();
        KpInput = new javax.swing.JSpinner();
        KpLabel = new javax.swing.JLabel();
        SetKp = new javax.swing.JButton();
        KiInput = new javax.swing.JSpinner();
        KiLabel = new javax.swing.JLabel();
        SetKi = new javax.swing.JButton();
        ControlsHeat = new javax.swing.JPanel();
        HeatOn = new javax.swing.JRadioButton();
        HeatOff = new javax.swing.JRadioButton();
        Status = new javax.swing.JPanel();
        StatusPower = new javax.swing.JPanel();
        StatusPowerImage = new javax.swing.JLabel();
        StatusPowerLabel = new javax.swing.JLabel();
        StatusAnetnnaPanel = new javax.swing.JPanel();
        StatusAntennaImage = new javax.swing.JLabel();
        StatusAntennaLabel = new javax.swing.JLabel();
        StatusServiceBrakePanel = new javax.swing.JPanel();
        StatusBrakeImage = new javax.swing.JLabel();
        StatusBrakeLabel = new javax.swing.JLabel();
        EmergencyBrakeToggleButton = new javax.swing.JToggleButton();
        TrainInformation = new javax.swing.JPanel();
        TrainInfoScrollPane = new javax.swing.JScrollPane();
        TrainInfoText = new javax.swing.JTextArea();
        TrainSelectorDropDown = new javax.swing.JComboBox<>();
        RealTimeHUD = new javax.swing.JPanel();
        RealTimeSpeedAndAuthority = new javax.swing.JPanel();
        ActualSpeedPanel = new javax.swing.JPanel();
        ActualSpeedUnitsLabel = new javax.swing.JLabel();
        ActualSpeedLabel = new javax.swing.JLabel();
        SpeedLimitPanel = new javax.swing.JPanel();
        SetSpeedUnitsLabel = new javax.swing.JLabel();
        SetSpeedLabel = new javax.swing.JLabel();
        SpeedLimitLabel = new javax.swing.JLabel();
        SpeedLimitUnitsLabel = new javax.swing.JLabel();
        SpeedLimitUnitsLabel1 = new javax.swing.JLabel();
        SpeedLimitUnitsLabel2 = new javax.swing.JLabel();
        AuthorityPanel = new javax.swing.JPanel();
        AuthorityUnitsLabel = new javax.swing.JLabel();
        AuthorityLabel = new javax.swing.JLabel();
        RealTimePower = new javax.swing.JPanel();
        MaxPowerPanel = new javax.swing.JPanel();
        MaxPowerUnitsLabel = new javax.swing.JLabel();
        MaxPowerLabel = new javax.swing.JLabel();
        PowerUsedPanel = new javax.swing.JPanel();
        PowerUnitsLabel = new javax.swing.JLabel();
        PowerUsedLabel = new javax.swing.JLabel();
        RealTimeNotifications = new javax.swing.JPanel();
        RealTimeNotificationsText = new javax.swing.JScrollPane();
        NotificationsDisplay = new javax.swing.JTextArea();
        Clock = new javax.swing.JPanel();
        ClockScrollPane = new javax.swing.JScrollPane();
        ClockText = new javax.swing.JTextArea();
        ServiceBrakeToggleButton = new javax.swing.JToggleButton();
        FailureSimulationPanel = new javax.swing.JPanel();
        ServiceBrakeFailureCheck = new javax.swing.JCheckBox();
        PowerFailureCheck = new javax.swing.JCheckBox();
        AntennaFailureCheck = new javax.swing.JCheckBox();
        TrainSelectorButton = new javax.swing.JButton();

        TrainControlsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Train Controls"));

        ControlsAC.setBorder(javax.swing.BorderFactory.createTitledBorder("A/C"));

        ACGroup.add(ACOn);
        ACOn.setText("On");
        ACOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ACOnActionPerformed(evt);
            }
        });

        ACGroup.add(ACOff);
        ACOff.setSelected(true);
        ACOff.setText("Off");
        ACOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ACOffActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ControlsACLayout = new javax.swing.GroupLayout(ControlsAC);
        ControlsAC.setLayout(ControlsACLayout);
        ControlsACLayout.setHorizontalGroup(
            ControlsACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlsACLayout.createSequentialGroup()
                .addComponent(ACOn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ACOff)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ControlsACLayout.setVerticalGroup(
            ControlsACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlsACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(ACOn)
                .addComponent(ACOff))
        );

        ControlsLights.setBorder(javax.swing.BorderFactory.createTitledBorder("Lights"));

        LightsGroup.add(LightsOn);
        LightsOn.setText("On");
        LightsOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LightsOnActionPerformed(evt);
            }
        });

        LightsGroup.add(LightsOff);
        LightsOff.setSelected(true);
        LightsOff.setText("Off");
        LightsOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LightsOffActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ControlsLightsLayout = new javax.swing.GroupLayout(ControlsLights);
        ControlsLights.setLayout(ControlsLightsLayout);
        ControlsLightsLayout.setHorizontalGroup(
            ControlsLightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlsLightsLayout.createSequentialGroup()
                .addComponent(LightsOn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LightsOff)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ControlsLightsLayout.setVerticalGroup(
            ControlsLightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlsLightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(LightsOn)
                .addComponent(LightsOff))
        );

        ControlsLeftDoor.setBorder(javax.swing.BorderFactory.createTitledBorder("Left Door"));

        LeftDoorGroup.add(LeftDoorOpened);
        LeftDoorOpened.setText("Opened");
        LeftDoorOpened.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LeftDoorOpenedActionPerformed(evt);
            }
        });

        LeftDoorGroup.add(LeftDoorClosed);
        LeftDoorClosed.setSelected(true);
        LeftDoorClosed.setText("Closed");
        LeftDoorClosed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LeftDoorClosedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ControlsLeftDoorLayout = new javax.swing.GroupLayout(ControlsLeftDoor);
        ControlsLeftDoor.setLayout(ControlsLeftDoorLayout);
        ControlsLeftDoorLayout.setHorizontalGroup(
            ControlsLeftDoorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlsLeftDoorLayout.createSequentialGroup()
                .addComponent(LeftDoorOpened)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LeftDoorClosed)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ControlsLeftDoorLayout.setVerticalGroup(
            ControlsLeftDoorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlsLeftDoorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(LeftDoorOpened)
                .addComponent(LeftDoorClosed))
        );

        ControlsRightDoor.setBorder(javax.swing.BorderFactory.createTitledBorder("Right Door"));

        RightDoorGroup.add(RightDoorClosed);
        RightDoorClosed.setSelected(true);
        RightDoorClosed.setText("Closed");
        RightDoorClosed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RightDoorClosedActionPerformed(evt);
            }
        });

        RightDoorGroup.add(RightDoorOpened);
        RightDoorOpened.setText("Opened");
        RightDoorOpened.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RightDoorOpenedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ControlsRightDoorLayout = new javax.swing.GroupLayout(ControlsRightDoor);
        ControlsRightDoor.setLayout(ControlsRightDoorLayout);
        ControlsRightDoorLayout.setHorizontalGroup(
            ControlsRightDoorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlsRightDoorLayout.createSequentialGroup()
                .addComponent(RightDoorOpened)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RightDoorClosed)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ControlsRightDoorLayout.setVerticalGroup(
            ControlsRightDoorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlsRightDoorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(RightDoorOpened)
                .addComponent(RightDoorClosed))
        );

        SetSpeed.setText("Set Speed");
        SetSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetSpeedActionPerformed(evt);
            }
        });

        ControlsSystemMode.setBorder(javax.swing.BorderFactory.createTitledBorder("System Mode"));

        ModeGroup.add(ManualModeSelect);
        ManualModeSelect.setText("Manual");
        ManualModeSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManualModeSelectActionPerformed(evt);
            }
        });

        ModeGroup.add(AutoModeSelect);
        AutoModeSelect.setSelected(true);
        AutoModeSelect.setText("Automatic");
        AutoModeSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutoModeSelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ControlsSystemModeLayout = new javax.swing.GroupLayout(ControlsSystemMode);
        ControlsSystemMode.setLayout(ControlsSystemModeLayout);
        ControlsSystemModeLayout.setHorizontalGroup(
            ControlsSystemModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlsSystemModeLayout.createSequentialGroup()
                .addComponent(ManualModeSelect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AutoModeSelect)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ControlsSystemModeLayout.setVerticalGroup(
            ControlsSystemModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlsSystemModeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ControlsSystemModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ManualModeSelect)
                    .addComponent(AutoModeSelect)))
        );

        ControlMPHLabel.setText("mph");

        AnnouncementText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AnnouncementText.setText("Type Announcement Here...");

        SendAnnouncement.setText("Make Announcement");
        SendAnnouncement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendAnnouncementActionPerformed(evt);
            }
        });

        KpLabel.setText("Kp");

        SetKp.setText("Set Kp");
        SetKp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetKpActionPerformed(evt);
            }
        });

        KiLabel.setText("Ki");

        SetKi.setText("Set Ki");
        SetKi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetKiActionPerformed(evt);
            }
        });

        ControlsHeat.setBorder(javax.swing.BorderFactory.createTitledBorder("Heat"));

        HeatGroup.add(HeatOn);
        HeatOn.setText("On");
        HeatOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeatOnActionPerformed(evt);
            }
        });

        HeatGroup.add(HeatOff);
        HeatOff.setSelected(true);
        HeatOff.setText("Off");
        HeatOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeatOffActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ControlsHeatLayout = new javax.swing.GroupLayout(ControlsHeat);
        ControlsHeat.setLayout(ControlsHeatLayout);
        ControlsHeatLayout.setHorizontalGroup(
            ControlsHeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlsHeatLayout.createSequentialGroup()
                .addComponent(HeatOn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HeatOff)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ControlsHeatLayout.setVerticalGroup(
            ControlsHeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlsHeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(HeatOn)
                .addComponent(HeatOff))
        );

        javax.swing.GroupLayout TrainControlsPanelLayout = new javax.swing.GroupLayout(TrainControlsPanel);
        TrainControlsPanel.setLayout(TrainControlsPanelLayout);
        TrainControlsPanelLayout.setHorizontalGroup(
            TrainControlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ControlsAC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ControlsLights, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ControlsLeftDoor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ControlsRightDoor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ControlsSystemMode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ControlsHeat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(SendAnnouncement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(TrainControlsPanelLayout.createSequentialGroup()
                .addGroup(TrainControlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(AnnouncementText, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TrainControlsPanelLayout.createSequentialGroup()
                        .addGroup(TrainControlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TrainControlsPanelLayout.createSequentialGroup()
                                .addComponent(KiInput, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(KiLabel))
                            .addGroup(TrainControlsPanelLayout.createSequentialGroup()
                                .addComponent(KpInput, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(KpLabel))
                            .addGroup(TrainControlsPanelLayout.createSequentialGroup()
                                .addComponent(SpeedInput, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ControlMPHLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TrainControlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(SetKp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SetSpeed, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SetKi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        TrainControlsPanelLayout.setVerticalGroup(
            TrainControlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrainControlsPanelLayout.createSequentialGroup()
                .addComponent(ControlsSystemMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(TrainControlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SpeedInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SetSpeed)
                    .addComponent(ControlMPHLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TrainControlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KpInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SetKp)
                    .addComponent(KpLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TrainControlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KiInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SetKi)
                    .addComponent(KiLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AnnouncementText, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SendAnnouncement)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ControlsAC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(ControlsHeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ControlsLights, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ControlsLeftDoor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ControlsRightDoor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        Status.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));

        StatusPower.setBorder(javax.swing.BorderFactory.createTitledBorder("Power"));

        StatusPowerImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        StatusPowerImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rogueone/images/CIRC_98.png"))); // NOI18N
        StatusPowerImage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        StatusPowerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        StatusPowerLabel.setText("ACTIVE");

        javax.swing.GroupLayout StatusPowerLayout = new javax.swing.GroupLayout(StatusPower);
        StatusPower.setLayout(StatusPowerLayout);
        StatusPowerLayout.setHorizontalGroup(
            StatusPowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatusPowerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StatusPowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StatusPowerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(StatusPowerLayout.createSequentialGroup()
                        .addComponent(StatusPowerImage, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        StatusPowerLayout.setVerticalGroup(
            StatusPowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatusPowerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StatusPowerImage, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StatusPowerLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        StatusAnetnnaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Antenna"));
        StatusAnetnnaPanel.setPreferredSize(new java.awt.Dimension(140, 190));

        StatusAntennaImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        StatusAntennaImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rogueone/images/CIRC_98.png"))); // NOI18N
        StatusAntennaImage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        StatusAntennaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        StatusAntennaLabel.setText("ACTIVE");

        javax.swing.GroupLayout StatusAnetnnaPanelLayout = new javax.swing.GroupLayout(StatusAnetnnaPanel);
        StatusAnetnnaPanel.setLayout(StatusAnetnnaPanelLayout);
        StatusAnetnnaPanelLayout.setHorizontalGroup(
            StatusAnetnnaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatusAnetnnaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StatusAnetnnaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StatusAnetnnaPanelLayout.createSequentialGroup()
                        .addComponent(StatusAntennaImage, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(StatusAntennaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        StatusAnetnnaPanelLayout.setVerticalGroup(
            StatusAnetnnaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatusAnetnnaPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(StatusAntennaImage, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StatusAntennaLabel)
                .addGap(31, 31, 31))
        );

        StatusServiceBrakePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Service Brake"));
        StatusServiceBrakePanel.setPreferredSize(new java.awt.Dimension(140, 190));

        StatusBrakeImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        StatusBrakeImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rogueone/images/CIRC_98.png"))); // NOI18N
        StatusBrakeImage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        StatusBrakeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        StatusBrakeLabel.setText("ACTIVE");

        javax.swing.GroupLayout StatusServiceBrakePanelLayout = new javax.swing.GroupLayout(StatusServiceBrakePanel);
        StatusServiceBrakePanel.setLayout(StatusServiceBrakePanelLayout);
        StatusServiceBrakePanelLayout.setHorizontalGroup(
            StatusServiceBrakePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatusServiceBrakePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StatusServiceBrakePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StatusServiceBrakePanelLayout.createSequentialGroup()
                        .addComponent(StatusBrakeImage, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(StatusBrakeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        StatusServiceBrakePanelLayout.setVerticalGroup(
            StatusServiceBrakePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatusServiceBrakePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(StatusBrakeImage, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StatusBrakeLabel)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout StatusLayout = new javax.swing.GroupLayout(Status);
        Status.setLayout(StatusLayout);
        StatusLayout.setHorizontalGroup(
            StatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StatusPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(StatusAnetnnaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(StatusServiceBrakePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        StatusLayout.setVerticalGroup(
            StatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(StatusAnetnnaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
            .addComponent(StatusPower, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(StatusServiceBrakePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
        );

        EmergencyBrakeToggleButton.setText("Emergency Brake");
        EmergencyBrakeToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmergencyBrakeToggleButtonActionPerformed(evt);
            }
        });

        TrainInformation.setBorder(javax.swing.BorderFactory.createTitledBorder("Train Information"));

        TrainInfoScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        TrainInfoScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        TrainInfoText.setColumns(20);
        TrainInfoText.setRows(5);
        TrainInfoText.setText("Train ID:\nLine:\nSection:\nBlock:\nPassengers:\nTemp:\n\n");
        TrainInfoScrollPane.setViewportView(TrainInfoText);

        javax.swing.GroupLayout TrainInformationLayout = new javax.swing.GroupLayout(TrainInformation);
        TrainInformation.setLayout(TrainInformationLayout);
        TrainInformationLayout.setHorizontalGroup(
            TrainInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TrainInfoScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        TrainInformationLayout.setVerticalGroup(
            TrainInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TrainInfoScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
        );

        TrainSelectorDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Train 1", "Train 2", "Train 3" }));

        RealTimeHUD.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Real Time HUD"));

        RealTimeSpeedAndAuthority.setBorder(javax.swing.BorderFactory.createTitledBorder("Speed and Authority"));

        ActualSpeedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Actual Speed"));

        ActualSpeedUnitsLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ActualSpeedUnitsLabel.setText("mph");

        ActualSpeedLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        ActualSpeedLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ActualSpeedLabel.setText("55");

        javax.swing.GroupLayout ActualSpeedPanelLayout = new javax.swing.GroupLayout(ActualSpeedPanel);
        ActualSpeedPanel.setLayout(ActualSpeedPanelLayout);
        ActualSpeedPanelLayout.setHorizontalGroup(
            ActualSpeedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActualSpeedPanelLayout.createSequentialGroup()
                .addComponent(ActualSpeedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ActualSpeedUnitsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        ActualSpeedPanelLayout.setVerticalGroup(
            ActualSpeedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ActualSpeedLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ActualSpeedUnitsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        SpeedLimitPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Speed Limit"));

        SetSpeedUnitsLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        SetSpeedUnitsLabel.setText("mph");

        SetSpeedLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        SetSpeedLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        SetSpeedLabel.setText("55");

        SpeedLimitLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        SpeedLimitLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        SpeedLimitLabel.setText("55");

        SpeedLimitUnitsLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        SpeedLimitUnitsLabel.setText("mph");

        SpeedLimitUnitsLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        SpeedLimitUnitsLabel1.setText("Set:");

        SpeedLimitUnitsLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        SpeedLimitUnitsLabel2.setText("Limit:");

        javax.swing.GroupLayout SpeedLimitPanelLayout = new javax.swing.GroupLayout(SpeedLimitPanel);
        SpeedLimitPanel.setLayout(SpeedLimitPanelLayout);
        SpeedLimitPanelLayout.setHorizontalGroup(
            SpeedLimitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SpeedLimitPanelLayout.createSequentialGroup()
                .addGroup(SpeedLimitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SpeedLimitUnitsLabel1)
                    .addComponent(SpeedLimitUnitsLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SpeedLimitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SpeedLimitPanelLayout.createSequentialGroup()
                        .addComponent(SpeedLimitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SpeedLimitUnitsLabel))
                    .addGroup(SpeedLimitPanelLayout.createSequentialGroup()
                        .addComponent(SetSpeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SetSpeedUnitsLabel)))
                .addGap(31, 31, Short.MAX_VALUE))
        );
        SpeedLimitPanelLayout.setVerticalGroup(
            SpeedLimitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SpeedLimitPanelLayout.createSequentialGroup()
                .addGroup(SpeedLimitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SetSpeedUnitsLabel)
                    .addComponent(SetSpeedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SpeedLimitUnitsLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SpeedLimitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SpeedLimitUnitsLabel)
                    .addComponent(SpeedLimitLabel)
                    .addComponent(SpeedLimitUnitsLabel2))
                .addGap(16, 16, 16))
        );

        AuthorityPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Authority"));

        AuthorityUnitsLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        AuthorityUnitsLabel.setText("feet");

        AuthorityLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        AuthorityLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AuthorityLabel.setText("300");
        AuthorityLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout AuthorityPanelLayout = new javax.swing.GroupLayout(AuthorityPanel);
        AuthorityPanel.setLayout(AuthorityPanelLayout);
        AuthorityPanelLayout.setHorizontalGroup(
            AuthorityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AuthorityPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AuthorityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AuthorityUnitsLabel))
        );
        AuthorityPanelLayout.setVerticalGroup(
            AuthorityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AuthorityPanelLayout.createSequentialGroup()
                .addGroup(AuthorityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(AuthorityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                    .addComponent(AuthorityUnitsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout RealTimeSpeedAndAuthorityLayout = new javax.swing.GroupLayout(RealTimeSpeedAndAuthority);
        RealTimeSpeedAndAuthority.setLayout(RealTimeSpeedAndAuthorityLayout);
        RealTimeSpeedAndAuthorityLayout.setHorizontalGroup(
            RealTimeSpeedAndAuthorityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RealTimeSpeedAndAuthorityLayout.createSequentialGroup()
                .addComponent(ActualSpeedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SpeedLimitPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AuthorityPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        RealTimeSpeedAndAuthorityLayout.setVerticalGroup(
            RealTimeSpeedAndAuthorityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SpeedLimitPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(AuthorityPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ActualSpeedPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        RealTimePower.setBorder(javax.swing.BorderFactory.createTitledBorder("Power"));

        MaxPowerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Maximum Power"));

        MaxPowerUnitsLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        MaxPowerUnitsLabel.setText("kW");

        MaxPowerLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        MaxPowerLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        MaxPowerLabel.setText("55");

        javax.swing.GroupLayout MaxPowerPanelLayout = new javax.swing.GroupLayout(MaxPowerPanel);
        MaxPowerPanel.setLayout(MaxPowerPanelLayout);
        MaxPowerPanelLayout.setHorizontalGroup(
            MaxPowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MaxPowerPanelLayout.createSequentialGroup()
                .addComponent(MaxPowerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MaxPowerUnitsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MaxPowerPanelLayout.setVerticalGroup(
            MaxPowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MaxPowerLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MaxPowerUnitsLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        PowerUsedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Power Utilization"));

        PowerUnitsLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        PowerUnitsLabel.setText("kW");

        PowerUsedLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        PowerUsedLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PowerUsedLabel.setText("55");

        javax.swing.GroupLayout PowerUsedPanelLayout = new javax.swing.GroupLayout(PowerUsedPanel);
        PowerUsedPanel.setLayout(PowerUsedPanelLayout);
        PowerUsedPanelLayout.setHorizontalGroup(
            PowerUsedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PowerUsedPanelLayout.createSequentialGroup()
                .addComponent(PowerUsedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PowerUnitsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        PowerUsedPanelLayout.setVerticalGroup(
            PowerUsedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PowerUsedLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PowerUnitsLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout RealTimePowerLayout = new javax.swing.GroupLayout(RealTimePower);
        RealTimePower.setLayout(RealTimePowerLayout);
        RealTimePowerLayout.setHorizontalGroup(
            RealTimePowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RealTimePowerLayout.createSequentialGroup()
                .addComponent(PowerUsedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MaxPowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RealTimePowerLayout.setVerticalGroup(
            RealTimePowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PowerUsedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MaxPowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        RealTimeNotifications.setBorder(javax.swing.BorderFactory.createTitledBorder("Notifications"));

        NotificationsDisplay.setColumns(20);
        NotificationsDisplay.setRows(5);
        RealTimeNotificationsText.setViewportView(NotificationsDisplay);

        javax.swing.GroupLayout RealTimeNotificationsLayout = new javax.swing.GroupLayout(RealTimeNotifications);
        RealTimeNotifications.setLayout(RealTimeNotificationsLayout);
        RealTimeNotificationsLayout.setHorizontalGroup(
            RealTimeNotificationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RealTimeNotificationsText)
        );
        RealTimeNotificationsLayout.setVerticalGroup(
            RealTimeNotificationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RealTimeNotificationsText, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout RealTimeHUDLayout = new javax.swing.GroupLayout(RealTimeHUD);
        RealTimeHUD.setLayout(RealTimeHUDLayout);
        RealTimeHUDLayout.setHorizontalGroup(
            RealTimeHUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RealTimeHUDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RealTimeHUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(RealTimeNotifications, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RealTimeSpeedAndAuthority, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RealTimePower, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        RealTimeHUDLayout.setVerticalGroup(
            RealTimeHUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RealTimeHUDLayout.createSequentialGroup()
                .addComponent(RealTimeSpeedAndAuthority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RealTimePower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RealTimeNotifications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Clock.setBorder(javax.swing.BorderFactory.createTitledBorder("Clock"));

        ClockScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        ClockScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        ClockText.setColumns(20);
        ClockText.setRows(5);
        ClockText.setText("Time and Date");
        ClockScrollPane.setViewportView(ClockText);

        javax.swing.GroupLayout ClockLayout = new javax.swing.GroupLayout(Clock);
        Clock.setLayout(ClockLayout);
        ClockLayout.setHorizontalGroup(
            ClockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClockLayout.createSequentialGroup()
                .addComponent(ClockScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ClockLayout.setVerticalGroup(
            ClockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ClockScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
        );

        ServiceBrakeToggleButton.setText("Service Brake");
        ServiceBrakeToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ServiceBrakeToggleButtonActionPerformed(evt);
            }
        });

        FailureSimulationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Failure Simulation"));

        ServiceBrakeFailureCheck.setText("Service Brake");
        ServiceBrakeFailureCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ServiceBrakeFailureCheckActionPerformed(evt);
            }
        });

        PowerFailureCheck.setText("Power");
        PowerFailureCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PowerFailureCheckActionPerformed(evt);
            }
        });

        AntennaFailureCheck.setText("Antenna");
        AntennaFailureCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AntennaFailureCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FailureSimulationPanelLayout = new javax.swing.GroupLayout(FailureSimulationPanel);
        FailureSimulationPanel.setLayout(FailureSimulationPanelLayout);
        FailureSimulationPanelLayout.setHorizontalGroup(
            FailureSimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FailureSimulationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FailureSimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ServiceBrakeFailureCheck)
                    .addComponent(PowerFailureCheck)
                    .addComponent(AntennaFailureCheck))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FailureSimulationPanelLayout.setVerticalGroup(
            FailureSimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FailureSimulationPanelLayout.createSequentialGroup()
                .addComponent(PowerFailureCheck)
                .addGap(18, 18, 18)
                .addComponent(AntennaFailureCheck)
                .addGap(18, 18, 18)
                .addComponent(ServiceBrakeFailureCheck)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        TrainSelectorButton.setText("Show");
        TrainSelectorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrainSelectorButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ServiceBrakeToggleButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TrainInformation, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EmergencyBrakeToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FailureSimulationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TrainSelectorDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TrainSelectorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RealTimeHUD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TrainControlsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Clock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(RealTimeHUD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TrainSelectorDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TrainSelectorButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TrainInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ServiceBrakeToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EmergencyBrakeToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FailureSimulationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Clock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TrainControlsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ServiceBrakeToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ServiceBrakeToggleButtonActionPerformed
        if(this.ServiceBrakeToggleButton.isSelected()){
            this.trainController.setServiceBrakeActivated(true);
            this.trainController.getTrainModel().setServiceBrakeActivated(true); //Is this cool with Jon?
            this.NotificationsDisplay.append("\nService Brake Activated");
        }
        else{
            this.trainController.setServiceBrakeActivated(false);
            this.trainController.getTrainModel().setServiceBrakeActivated(false); //Is this cool with Jon?
            this.NotificationsDisplay.append("\nService Brake Deactivated");
        }
    }//GEN-LAST:event_ServiceBrakeToggleButtonActionPerformed

    private void SetKpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetKpActionPerformed
        this.trainController.vitals.setKP(Integer.valueOf(this.KpInput.getValue().toString()));
        this.NotificationsDisplay.append("\nKp Updated to " + this.trainController.vitals.getkP());
    }//GEN-LAST:event_SetKpActionPerformed

    private void SetKiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetKiActionPerformed
        this.trainController.vitals.setKI(Integer.valueOf(this.KiInput.getValue().toString()));
        this.NotificationsDisplay.append("\nKi Updated to " + this.trainController.vitals.getkI());
    }//GEN-LAST:event_SetKiActionPerformed

    private void TrainSelectorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrainSelectorButtonActionPerformed
        this.trainController.updateGUI(this);
        //Just used as an updater for now.
    }//GEN-LAST:event_TrainSelectorButtonActionPerformed

    private void SendAnnouncementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendAnnouncementActionPerformed
        this.NotificationsDisplay.append("\n" + this.AnnouncementText.getText());
        this.AnnouncementText.setText("Type Announcement Here...");
    }//GEN-LAST:event_SendAnnouncementActionPerformed

    private void EmergencyBrakeToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmergencyBrakeToggleButtonActionPerformed
        if(this.EmergencyBrakeToggleButton.isSelected()){
            this.trainController.setEmergencyBrakeActivated(true);
            this.trainController.getTrainModel().setEmergencyBrakeActivated(true);
            this.NotificationsDisplay.append("\nEmergency Brake Activated");
        }
        else{
            this.trainController.setEmergencyBrakeActivated(false);
            this.trainController.getTrainModel().setEmergencyBrakeActivated(false);
            this.NotificationsDisplay.append("\nEmergency Brake Deactivated");
        }
    }//GEN-LAST:event_EmergencyBrakeToggleButtonActionPerformed

    private void PowerFailureCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PowerFailureCheckActionPerformed
        if(this.PowerFailureCheck.isSelected()){
            this.trainController.vitals.causeFailure(TrainFailures.Power);
            this.StatusPowerLabel.setText("FAILURE");
            this.StatusPowerImage.setIcon(new ImageIcon(getClass().getResource("../../images/SQUARE_98.png")));
            this.NotificationsDisplay.append("\nPower Failure Simulated");
        }
        else{
            this.trainController.vitals.fixFailure(TrainFailures.Power);
            this.StatusPowerLabel.setText("ACTIVE");
            this.StatusPowerImage.setIcon(new ImageIcon(getClass().getResource("../../images/CIRC_98.png")));
            this.NotificationsDisplay.append("\nPower Failure Simulation Ended");
        } 
    }//GEN-LAST:event_PowerFailureCheckActionPerformed

    private void AntennaFailureCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AntennaFailureCheckActionPerformed
        if(this.AntennaFailureCheck.isSelected()){
            this.trainController.vitals.causeFailure(TrainFailures.Antenna);
            this.StatusAntennaLabel.setText("FAILURE");
            this.StatusAntennaImage.setIcon(new ImageIcon(getClass().getResource("../../images/SQUARE_98.png")));
            this.NotificationsDisplay.append("\nAntenna Failure Simulated");
        }
        else{
            this.trainController.vitals.fixFailure(TrainFailures.Antenna);
            this.StatusAntennaLabel.setText("ACTIVE");
            this.StatusAntennaImage.setIcon(new ImageIcon(getClass().getResource("../../images/CIRC_98.png")));
            this.NotificationsDisplay.append("\nAntenna Failure Simulation Ended");
        }
    }//GEN-LAST:event_AntennaFailureCheckActionPerformed

    private void ServiceBrakeFailureCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ServiceBrakeFailureCheckActionPerformed
        if(this.ServiceBrakeFailureCheck.isSelected()){
            this.trainController.vitals.causeFailure(TrainFailures.Brake);
            this.StatusBrakeLabel.setText("FAILURE");
            this.StatusBrakeImage.setIcon(new ImageIcon(getClass().getResource("../../images/SQUARE_98.png")));
            this.NotificationsDisplay.append("\nService Brake Failure Simulated");
        }
        else{
            this.trainController.vitals.fixFailure(TrainFailures.Brake);
            this.StatusBrakeLabel.setText("ACTIVE");
            this.StatusBrakeImage.setIcon(new ImageIcon(getClass().getResource("../../images/CIRC_98.png")));
            this.NotificationsDisplay.append("\nService Brake Failure Simulation Ended");
        }
    }//GEN-LAST:event_ServiceBrakeFailureCheckActionPerformed

    private void ACOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ACOnActionPerformed
        if(this.ACOn.isSelected()){
            this.trainController.setAirConditioningOn(true);
            this.NotificationsDisplay.append("\nA/C Activated");
            if(this.HeatOn.isSelected()){
                this.trainController.setHeaterOn(false);
                this.NotificationsDisplay.append("\nHeater Deactivated");
                this.HeatOff.setSelected(true);
            }
        }        
    }//GEN-LAST:event_ACOnActionPerformed

    private void HeatOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HeatOnActionPerformed
        if(this.HeatOn.isSelected()){
            this.trainController.setHeaterOn(true);
            this.NotificationsDisplay.append("\nHeater Activated");
            if(this.ACOn.isSelected()){
                this.trainController.setAirConditioningOn(false);
                this.NotificationsDisplay.append("\nA/C Deactivated");
                this.ACOff.setSelected(true);
            }
        }
    }//GEN-LAST:event_HeatOnActionPerformed

    private void ACOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ACOffActionPerformed
        this.trainController.setAirConditioningOn(false);
        this.NotificationsDisplay.append("\nA/C Deactivated");
    }//GEN-LAST:event_ACOffActionPerformed

    private void HeatOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HeatOffActionPerformed
        this.trainController.setHeaterOn(false);
        this.NotificationsDisplay.append("\nHeater Deactivated");
    }//GEN-LAST:event_HeatOffActionPerformed

    private void LightsOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LightsOnActionPerformed
        this.trainController.setLightsOn(true);
        this.NotificationsDisplay.append("\nLights Activated");
    }//GEN-LAST:event_LightsOnActionPerformed

    private void LightsOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LightsOffActionPerformed
        this.trainController.setLightsOn(false);
        this.NotificationsDisplay.append("\nLights Deactivated");
    }//GEN-LAST:event_LightsOffActionPerformed

    private void ManualModeSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManualModeSelectActionPerformed
        this.trainController.setManualMode(true);
        this.NotificationsDisplay.append("\nManual Mode Activated");
    }//GEN-LAST:event_ManualModeSelectActionPerformed

    private void AutoModeSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutoModeSelectActionPerformed
        this.trainController.setManualMode(false);
        this.NotificationsDisplay.append("\nAutomatic Mode Activated");
    }//GEN-LAST:event_AutoModeSelectActionPerformed

    private void LeftDoorOpenedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LeftDoorOpenedActionPerformed
        if(this.trainController.gps.getCurrSpeed() == 0){ //NEED TO CHECK IF AT A STATION OR NOT AND PROPER SIDE
            this.trainController.setLeftDoorOpen(true);
            this.NotificationsDisplay.append("\nLeft Door Opened");
        }
        else{
            this.trainController.setLeftDoorOpen(false);
            this.NotificationsDisplay.append("\nTrain still moving. Please wait until completely stopped.");
        }
    }//GEN-LAST:event_LeftDoorOpenedActionPerformed

    private void RightDoorOpenedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RightDoorOpenedActionPerformed
        if(this.trainController.gps.getCurrSpeed() == 0){ //NEED TO CHECK IF AT A STATION OR NOT AND PROPER SIDE
            this.trainController.setRightDoorOpen(true);
            this.NotificationsDisplay.append("\nRight Door Opened");
        }
        else{
            this.trainController.setRightDoorOpen(false);
            this.NotificationsDisplay.append("\nTrain still moving. Please wait until completely stopped.");
        }
    }//GEN-LAST:event_RightDoorOpenedActionPerformed

    private void LeftDoorClosedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LeftDoorClosedActionPerformed
        this.trainController.setLeftDoorOpen(false);
        this.NotificationsDisplay.append("\nLeft Door Closed");
    }//GEN-LAST:event_LeftDoorClosedActionPerformed

    private void RightDoorClosedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RightDoorClosedActionPerformed
        this.trainController.setRightDoorOpen(false);
        this.NotificationsDisplay.append("\nRight Door Closed");
    }//GEN-LAST:event_RightDoorClosedActionPerformed

    private void SetSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetSpeedActionPerformed
        this.trainController.setDriverSetPoint(Byte.valueOf(this.SpeedInput.getValue().toString()));
        this.NotificationsDisplay.append("\nDriver set point updated to " + this.trainController.speedControl.getDriverSetPoint());
    }//GEN-LAST:event_SetSpeedActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.ButtonGroup ACGroup;
    public javax.swing.JRadioButton ACOff;
    public javax.swing.JRadioButton ACOn;
    public javax.swing.JLabel ActualSpeedLabel;
    private javax.swing.JPanel ActualSpeedPanel;
    private javax.swing.JLabel ActualSpeedUnitsLabel;
    public javax.swing.JTextField AnnouncementText;
    public javax.swing.JCheckBox AntennaFailureCheck;
    public javax.swing.JLabel AuthorityLabel;
    private javax.swing.JPanel AuthorityPanel;
    private javax.swing.JLabel AuthorityUnitsLabel;
    public javax.swing.JRadioButton AutoModeSelect;
    private javax.swing.JPanel Clock;
    private javax.swing.JScrollPane ClockScrollPane;
    public javax.swing.JTextArea ClockText;
    private javax.swing.JLabel ControlMPHLabel;
    private javax.swing.JPanel ControlsAC;
    private javax.swing.JPanel ControlsHeat;
    private javax.swing.JPanel ControlsLeftDoor;
    private javax.swing.JPanel ControlsLights;
    private javax.swing.JPanel ControlsRightDoor;
    private javax.swing.JPanel ControlsSystemMode;
    public javax.swing.JToggleButton EmergencyBrakeToggleButton;
    private javax.swing.JPanel FailureSimulationPanel;
    private javax.swing.ButtonGroup HeatGroup;
    public javax.swing.JRadioButton HeatOff;
    public javax.swing.JRadioButton HeatOn;
    public javax.swing.JSpinner KiInput;
    private javax.swing.JLabel KiLabel;
    public javax.swing.JSpinner KpInput;
    private javax.swing.JLabel KpLabel;
    public javax.swing.JRadioButton LeftDoorClosed;
    public javax.swing.ButtonGroup LeftDoorGroup;
    public javax.swing.JRadioButton LeftDoorOpened;
    public javax.swing.ButtonGroup LightsGroup;
    public javax.swing.JRadioButton LightsOff;
    public javax.swing.JRadioButton LightsOn;
    public javax.swing.JRadioButton ManualModeSelect;
    public javax.swing.JLabel MaxPowerLabel;
    private javax.swing.JPanel MaxPowerPanel;
    private javax.swing.JLabel MaxPowerUnitsLabel;
    private javax.swing.ButtonGroup ModeGroup;
    public javax.swing.JTextArea NotificationsDisplay;
    public javax.swing.JCheckBox PowerFailureCheck;
    private javax.swing.JLabel PowerUnitsLabel;
    public javax.swing.JLabel PowerUsedLabel;
    private javax.swing.JPanel PowerUsedPanel;
    private javax.swing.JPanel RealTimeHUD;
    private javax.swing.JPanel RealTimeNotifications;
    private javax.swing.JScrollPane RealTimeNotificationsText;
    private javax.swing.JPanel RealTimePower;
    private javax.swing.JPanel RealTimeSpeedAndAuthority;
    public javax.swing.JRadioButton RightDoorClosed;
    public javax.swing.ButtonGroup RightDoorGroup;
    public javax.swing.JRadioButton RightDoorOpened;
    private javax.swing.JButton SendAnnouncement;
    public javax.swing.JCheckBox ServiceBrakeFailureCheck;
    public javax.swing.JToggleButton ServiceBrakeToggleButton;
    private javax.swing.JButton SetKi;
    private javax.swing.JButton SetKp;
    private javax.swing.JButton SetSpeed;
    public javax.swing.JLabel SetSpeedLabel;
    private javax.swing.JLabel SetSpeedUnitsLabel;
    public javax.swing.JSpinner SpeedInput;
    public javax.swing.JLabel SpeedLimitLabel;
    private javax.swing.JPanel SpeedLimitPanel;
    private javax.swing.JLabel SpeedLimitUnitsLabel;
    private javax.swing.JLabel SpeedLimitUnitsLabel1;
    private javax.swing.JLabel SpeedLimitUnitsLabel2;
    private javax.swing.JPanel Status;
    private javax.swing.JPanel StatusAnetnnaPanel;
    public javax.swing.JLabel StatusAntennaImage;
    public javax.swing.JLabel StatusAntennaLabel;
    public javax.swing.JLabel StatusBrakeImage;
    public javax.swing.JLabel StatusBrakeLabel;
    private javax.swing.JPanel StatusPower;
    public javax.swing.JLabel StatusPowerImage;
    public javax.swing.JLabel StatusPowerLabel;
    private javax.swing.JPanel StatusServiceBrakePanel;
    private javax.swing.JPanel TrainControlsPanel;
    private javax.swing.JScrollPane TrainInfoScrollPane;
    public javax.swing.JTextArea TrainInfoText;
    private javax.swing.JPanel TrainInformation;
    private javax.swing.JButton TrainSelectorButton;
    public javax.swing.JComboBox<String> TrainSelectorDropDown;
    // End of variables declaration//GEN-END:variables
}
