/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rogueone.mbo.gui;
import com.rogueone.mbo.*;
import java.io.File;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import java.io.IOException;
import com.rogueone.trainsystem.TrainSystem;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.*;;
/**
 *
 * @author Brian Stevenson
 */
public class MovingBlockGUI extends javax.swing.JPanel {

    private TrainSystem trainSystem;
private File file = new File("src\\com\\rogueone\\assets\\schedule.xlsx");
private Mbo mbo = trainSystem.getMBO();
private boolean mode  = false;

    /**
     * Creates new form MovingBlockGUI
     */
    public MovingBlockGUI(TrainSystem trainSystem) {
        this.trainSystem = trainSystem;
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        MboPane = new javax.swing.JScrollPane();
        MboPanel = new javax.swing.JPanel();
        TrainSchedulePanel = new javax.swing.JPanel();
        TrainSchedule = new javax.swing.JScrollPane();
        trainTable = new javax.swing.JTable();
        PersonnelSchedulePanel = new javax.swing.JPanel();
        PersonnelSchedule = new javax.swing.JScrollPane();
        pScheduleTable = new javax.swing.JTable();
        MboModePanel = new javax.swing.JPanel();
        FixedBlockRadio = new javax.swing.JRadioButton();
        MovingBlockRadio = new javax.swing.JRadioButton();
        ControlModeLabel = new javax.swing.JLabel();
        SystemStatusLabel = new javax.swing.JLabel();
        MboLabel = new javax.swing.JLabel();
        MboStatusLabel = new javax.swing.JLabel();
        SchedulerInputsPanel = new javax.swing.JPanel();
        UploadScheduleButton = new javax.swing.JButton();
        UploadScheduleLabel = new javax.swing.JLabel();
        GenerateScheduleLabel = new javax.swing.JLabel();
        ThroughputRadio = new javax.swing.JRadioButton();
        NumTrainsRadio = new javax.swing.JRadioButton();
        ThroughputInput = new javax.swing.JTextField();
        NumTrainsInput = new javax.swing.JTextField();
        MboUnits3 = new javax.swing.JLabel();
        MboUnits4 = new javax.swing.JLabel();
        MboOkButton2 = new javax.swing.JButton();
        DetailedScheduleButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        MboPanel.setPreferredSize(new java.awt.Dimension(1000, 650));

        TrainSchedulePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Active Trains"));

        trainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Train ID", "Line", "Track Section", "Block", "Next Station", "Time of Arrival", "Authority", "Current Speed", "Suggested ", "Passengers"
            }
        ));
        TrainSchedule.setViewportView(trainTable);

        PersonnelSchedulePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Personnel Schedule"));

        pScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Mon", "Tues", "Wed", "Thurs", "Fri", "Sat", "Sun"
            }
        ));
        PersonnelSchedule.setViewportView(pScheduleTable);

        javax.swing.GroupLayout PersonnelSchedulePanelLayout = new javax.swing.GroupLayout(PersonnelSchedulePanel);
        PersonnelSchedulePanel.setLayout(PersonnelSchedulePanelLayout);
        PersonnelSchedulePanelLayout.setHorizontalGroup(
            PersonnelSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PersonnelSchedulePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PersonnelSchedule)
                .addContainerGap())
        );
        PersonnelSchedulePanelLayout.setVerticalGroup(
            PersonnelSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PersonnelSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout TrainSchedulePanelLayout = new javax.swing.GroupLayout(TrainSchedulePanel);
        TrainSchedulePanel.setLayout(TrainSchedulePanelLayout);
        TrainSchedulePanelLayout.setHorizontalGroup(
            TrainSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TrainSchedulePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TrainSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PersonnelSchedulePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TrainSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, 976, Short.MAX_VALUE))
                .addGap(280, 280, 280))
        );
        TrainSchedulePanelLayout.setVerticalGroup(
            TrainSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrainSchedulePanelLayout.createSequentialGroup()
                .addComponent(TrainSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PersonnelSchedulePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        MboModePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Mode"));

        buttonGroup1.add(FixedBlockRadio);
        FixedBlockRadio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        FixedBlockRadio.setText("Fixed Block ");
        FixedBlockRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FixedBlockRadioActionPerformed(evt);
            }
        });

        buttonGroup1.add(MovingBlockRadio);
        MovingBlockRadio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        MovingBlockRadio.setSelected(true);
        MovingBlockRadio.setText("Moving Block");
        MovingBlockRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MovingBlockRadioActionPerformed(evt);
            }
        });

        ControlModeLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ControlModeLabel.setText("Control Mode: ");

        SystemStatusLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SystemStatusLabel.setForeground(new java.awt.Color(0, 204, 51));
        SystemStatusLabel.setText("AUTOMATIC");

        MboLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        MboLabel.setText("MBO: ");

        MboStatusLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        MboStatusLabel.setForeground(new java.awt.Color(0, 204, 51));
        MboStatusLabel.setText("ENABLED");

        javax.swing.GroupLayout MboModePanelLayout = new javax.swing.GroupLayout(MboModePanel);
        MboModePanel.setLayout(MboModePanelLayout);
        MboModePanelLayout.setHorizontalGroup(
            MboModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MboModePanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(MboModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MboModePanelLayout.createSequentialGroup()
                        .addGroup(MboModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ControlModeLabel)
                            .addComponent(MboLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MboModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MboStatusLabel)
                            .addComponent(SystemStatusLabel)))
                    .addGroup(MboModePanelLayout.createSequentialGroup()
                        .addComponent(FixedBlockRadio)
                        .addGap(18, 18, 18)
                        .addComponent(MovingBlockRadio)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        MboModePanelLayout.setVerticalGroup(
            MboModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MboModePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MboModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SystemStatusLabel)
                    .addComponent(ControlModeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MboModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MboLabel)
                    .addComponent(MboStatusLabel))
                .addGap(47, 47, 47)
                .addGroup(MboModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MovingBlockRadio)
                    .addComponent(FixedBlockRadio))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        SchedulerInputsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Scheduler Inputs"));

        UploadScheduleButton.setText("Upload");
        UploadScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadScheduleButtonActionPerformed(evt);
            }
        });

        UploadScheduleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        UploadScheduleLabel.setText("Upload new schedule (.xlsx)");

        GenerateScheduleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        GenerateScheduleLabel.setText("Generate new train schedule using desired...");

        buttonGroup2.add(ThroughputRadio);
        ThroughputRadio.setSelected(true);
        ThroughputRadio.setText("Throughput");
        ThroughputRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThroughputRadioActionPerformed(evt);
            }
        });

        buttonGroup2.add(NumTrainsRadio);
        NumTrainsRadio.setText("Number of active trains per line");
        NumTrainsRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumTrainsRadioActionPerformed(evt);
            }
        });

        ThroughputInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThroughputInputActionPerformed(evt);
            }
        });

        MboUnits3.setText("trains/hr");

        MboUnits4.setText("trains");

        MboOkButton2.setText("Generate");
        MboOkButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MboOkButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SchedulerInputsPanelLayout = new javax.swing.GroupLayout(SchedulerInputsPanel);
        SchedulerInputsPanel.setLayout(SchedulerInputsPanelLayout);
        SchedulerInputsPanelLayout.setHorizontalGroup(
            SchedulerInputsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SchedulerInputsPanelLayout.createSequentialGroup()
                .addComponent(GenerateScheduleLabel)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(SchedulerInputsPanelLayout.createSequentialGroup()
                .addGroup(SchedulerInputsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(SchedulerInputsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(SchedulerInputsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(UploadScheduleLabel)
                            .addComponent(MboOkButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UploadScheduleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SchedulerInputsPanelLayout.createSequentialGroup()
                        .addGroup(SchedulerInputsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SchedulerInputsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(NumTrainsRadio))
                            .addGroup(SchedulerInputsPanelLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(ThroughputRadio)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(SchedulerInputsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ThroughputInput, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NumTrainsInput, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SchedulerInputsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MboUnits3)
                    .addComponent(MboUnits4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SchedulerInputsPanelLayout.setVerticalGroup(
            SchedulerInputsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SchedulerInputsPanelLayout.createSequentialGroup()
                .addComponent(UploadScheduleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UploadScheduleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(GenerateScheduleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SchedulerInputsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThroughputRadio)
                    .addComponent(ThroughputInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MboUnits3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SchedulerInputsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumTrainsRadio)
                    .addComponent(NumTrainsInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MboUnits4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MboOkButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addContainerGap())
        );

        DetailedScheduleButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        DetailedScheduleButton.setText("View detailed train schedule");
        DetailedScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DetailedScheduleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MboPanelLayout = new javax.swing.GroupLayout(MboPanel);
        MboPanel.setLayout(MboPanelLayout);
        MboPanelLayout.setHorizontalGroup(
            MboPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MboPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MboModePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SchedulerInputsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DetailedScheduleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(MboPanelLayout.createSequentialGroup()
                .addComponent(TrainSchedulePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        MboPanelLayout.setVerticalGroup(
            MboPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MboPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MboPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(MboPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(MboModePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SchedulerInputsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DetailedScheduleButton, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TrainSchedulePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        MboPane.setViewportView(MboPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 77;
        gridBagConstraints.ipady = 77;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(MboPane, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void FixedBlockRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FixedBlockRadioActionPerformed

        
       
    }//GEN-LAST:event_FixedBlockRadioActionPerformed

    private void UploadScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadScheduleButtonActionPerformed
        JFileChooser scheduleChooser = new JFileChooser("src/com/rogueone/assets");
        int returnVal = scheduleChooser.showOpenDialog(this);
        TrainScheduleGUI trainGUI = new TrainScheduleGUI();
        Mbo mbo = trainSystem.getMBO();
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File newFile = scheduleChooser.getSelectedFile();
            try {
                file = newFile;
                Scheduler.readRedSchedule(newFile);
                Scheduler.readGreenSchedule(newFile);
                Scheduler.readPersonnelSchedule(newFile);
            }
            catch (IOException ex) {
                System.out.println("problem accessing file"+file.getAbsolutePath());
            }
            catch (InvalidFormatException ex) {
                System.out.println("Please select an .xlsx file.");
            }
        } else if (returnVal == JFileChooser.CANCEL_OPTION){
           System.out.println("File access cancelled by user.");
        }
        scheduleChooser.setVisible(true);
                                       
    }//GEN-LAST:event_UploadScheduleButtonActionPerformed

    private void ThroughputRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThroughputRadioActionPerformed
        if(ThroughputRadio.isSelected())
        {
            NumTrainsInput.setEnabled(false);
            MboUnits4.setEnabled(false);
            ThroughputInput.setEnabled(true);
            MboUnits3.setEnabled(true);
        }
    }//GEN-LAST:event_ThroughputRadioActionPerformed

    private void ThroughputInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThroughputInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ThroughputInputActionPerformed

    private void MboOkButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MboOkButton2ActionPerformed
        Mbo mbo = null;
        mbo = trainSystem.getMBO();
            //File file = new File("src\\com\\rogueone\\assets\\altSchedule.xlsx");
            if(NumTrainsRadio.isSelected()){
                String numTrainStr = NumTrainsInput.getText();
                int numTrains = Integer.parseInt(numTrainStr);
                try{
                Scheduler.generateSchedule(numTrains);
                }
                catch(IOException | InvalidFormatException e){

                }
            }
            else if(ThroughputRadio.isSelected()){
                String numTrainStr = ThroughputInput.getText();
                int throughput = Integer.parseInt(numTrainStr);
                double timearoundGreen = .75;
                double timearoundRed = .33;
                int numTrains = (int)Math.ceil(throughput/timearoundGreen);
                try{
                Scheduler.generateSchedule(numTrains);
                }
                catch(IOException | InvalidFormatException e){

                }
            }
    }//GEN-LAST:event_MboOkButton2ActionPerformed

    private void NumTrainsRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumTrainsRadioActionPerformed
        if(NumTrainsRadio.isSelected())
        {
            NumTrainsInput.setEnabled(true);
            MboUnits4.setEnabled(true);
            ThroughputInput.setEnabled(false);
            MboUnits3.setEnabled(false);
            Mbo mbo = trainSystem.getMBO();
            
        }
    }//GEN-LAST:event_NumTrainsRadioActionPerformed

    private void DetailedScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DetailedScheduleButtonActionPerformed

        
        TrainScheduleGUI trainSchedule = new TrainScheduleGUI();
         Mbo mbo = trainSystem.getMBO();
         
         try{
         Scheduler.readRedSchedule(file);
         Scheduler.setScheduleVisible();
         }
         catch(IOException | InvalidFormatException e){
             
         }
        //trainSchedule.setVisible(true);
       ArrayList<String> a = new ArrayList<String>();
       a = trainSystem.getScheduler().getDispatchTimes();
       System.out.println(a.get(0));
    }//GEN-LAST:event_DetailedScheduleButtonActionPerformed

    private void MovingBlockRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MovingBlockRadioActionPerformed
        if(MovingBlockRadio.isSelected())
        {
            //CurrentModeLabel.setText("Moving Block Mode");
            trainSystem.getMBO().changeToMovingBlock();
        }
    }//GEN-LAST:event_MovingBlockRadioActionPerformed

    public void update(){
        mode = trainSystem.getCTC().isAutomatic();
        if(mode != true){
            //System.out.println("In manual");
            SystemStatusLabel.setText("MANUAL");
            SystemStatusLabel.setForeground(Color.red);
            MboStatusLabel.setText("DISABLED");
            MboStatusLabel.setForeground(Color.red);
            FixedBlockRadio.setEnabled(false);
            MovingBlockRadio.setEnabled(false);
            //TrainDropdown.setEnabled(false);
            //MboOkButton1.setEnabled(false);
        }
        else{
            //System.out.println("In automatic");
            SystemStatusLabel.setText("AUTOMATIC");
             SystemStatusLabel.setForeground(Color.green);
            if(MovingBlockRadio.isSelected()==true){
                MboStatusLabel.setText("ENABLED");
                MboStatusLabel.setForeground(Color.green);
            }
            else if(FixedBlockRadio.isSelected()==true){
                MboStatusLabel.setText("DISABLED");
                MboStatusLabel.setForeground(Color.red);
            }
             FixedBlockRadio.setEnabled(true);
                MovingBlockRadio.setEnabled(true);
             //TrainDropdown.setEnabled(true);
                //MboOkButton1.setEnabled(true);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel ControlModeLabel;
    private javax.swing.JButton DetailedScheduleButton;
    private javax.swing.JRadioButton FixedBlockRadio;
    private javax.swing.JLabel GenerateScheduleLabel;
    private javax.swing.JLabel MboLabel;
    private javax.swing.JPanel MboModePanel;
    private javax.swing.JButton MboOkButton2;
    private javax.swing.JScrollPane MboPane;
    public javax.swing.JPanel MboPanel;
    private javax.swing.JLabel MboStatusLabel;
    private javax.swing.JLabel MboUnits3;
    private javax.swing.JLabel MboUnits4;
    private javax.swing.JRadioButton MovingBlockRadio;
    private javax.swing.JTextField NumTrainsInput;
    private javax.swing.JRadioButton NumTrainsRadio;
    private javax.swing.JScrollPane PersonnelSchedule;
    private javax.swing.JPanel PersonnelSchedulePanel;
    private javax.swing.JPanel SchedulerInputsPanel;
    private javax.swing.JLabel SystemStatusLabel;
    private javax.swing.JTextField ThroughputInput;
    private javax.swing.JRadioButton ThroughputRadio;
    private javax.swing.JScrollPane TrainSchedule;
    private javax.swing.JPanel TrainSchedulePanel;
    private javax.swing.JButton UploadScheduleButton;
    private javax.swing.JLabel UploadScheduleLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    public javax.swing.JTable pScheduleTable;
    public javax.swing.JTable trainTable;
    // End of variables declaration//GEN-END:variables
}
