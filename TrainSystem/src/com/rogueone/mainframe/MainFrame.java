/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rogueone.mainframe;

import com.rogueone.trainsystem.TrainSystem;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.JLabel;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;

/**
 *
 * @author kylemonto
 */
public class MainFrame extends javax.swing.JFrame {
    
    public JLabel timeLabel;

    public TrainSystem trainSystem;
    /**
     * Creates new form MainFrame
     * @param trainSystem the TrainSystem
     */
    public MainFrame(TrainSystem trainSystem) {
        initComponents();
        this.trainSystem = trainSystem;
        timeLabel.setFont(new java.awt.Font("Futura", 0, 14));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        timeButtonGroup = new javax.swing.ButtonGroup();
        jMenuItem1 = new javax.swing.JMenuItem();
        mainMenuBar = new javax.swing.JMenuBar();
        speedMenu = new javax.swing.JMenu();
        normalTimeRadioButton = new javax.swing.JRadioButtonMenuItem();
        x10SpeedRadioButton = new javax.swing.JRadioButtonMenuItem();
        x25SpeedRadioButton = new javax.swing.JRadioButtonMenuItem();
        x50SpeedRadioButton = new javax.swing.JRadioButtonMenuItem();
        x100SpeedRadioButton = new javax.swing.JRadioButtonMenuItem();
        moduleMenu = new javax.swing.JMenu();
        ctcMenuItem = new javax.swing.JMenuItem();
        trackControllerHandlerMenuItem = new javax.swing.JMenuItem();
        trackModelMenuItem = new javax.swing.JMenuItem();
        trainHandlerMenuItem = new javax.swing.JMenuItem();
        mboMenuItem = new javax.swing.JMenuItem();
        greenTrackViewItem = new javax.swing.JMenuItem();
        redTrackViewItem = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(275, 700));
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        mainMenuBar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        speedMenu.setText("Speed");
        speedMenu.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N

        timeButtonGroup.add(normalTimeRadioButton);
        normalTimeRadioButton.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        normalTimeRadioButton.setSelected(true);
        normalTimeRadioButton.setText("Normal Time");
        normalTimeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalTimeRadioButtonActionPerformed(evt);
            }
        });
        speedMenu.add(normalTimeRadioButton);

        timeButtonGroup.add(x10SpeedRadioButton);
        x10SpeedRadioButton.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        x10SpeedRadioButton.setText("10x Normal Time");
        x10SpeedRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x10SpeedRadioButtonActionPerformed(evt);
            }
        });
        speedMenu.add(x10SpeedRadioButton);

        timeButtonGroup.add(x25SpeedRadioButton);
        x25SpeedRadioButton.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        x25SpeedRadioButton.setSelected(false);
        x25SpeedRadioButton.setText("25x Normal Time");
        x25SpeedRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x25SpeedRadioButtonActionPerformed(evt);
            }
        });
        speedMenu.add(x25SpeedRadioButton);

        timeButtonGroup.add(x50SpeedRadioButton);
        x50SpeedRadioButton.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        x50SpeedRadioButton.setSelected(false);
        x50SpeedRadioButton.setText("50x Normal Time");
        x50SpeedRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x50SpeedRadioButtonActionPerformed(evt);
            }
        });
        speedMenu.add(x50SpeedRadioButton);

        timeButtonGroup.add(x100SpeedRadioButton);
        x100SpeedRadioButton.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        x100SpeedRadioButton.setText("100x Normal Time");
        x100SpeedRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x100SpeedRadioButtonActionPerformed(evt);
            }
        });
        speedMenu.add(x100SpeedRadioButton);

        mainMenuBar.add(speedMenu);

        moduleMenu.setText("Module");
        moduleMenu.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N

        ctcMenuItem.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        ctcMenuItem.setText("CTC");
        ctcMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctcMenuItemActionPerformed(evt);
            }
        });
        moduleMenu.add(ctcMenuItem);

        trackControllerHandlerMenuItem.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        trackControllerHandlerMenuItem.setText("Track Controller Handler");
        trackControllerHandlerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackControllerHandlerMenuItemActionPerformed(evt);
            }
        });
        moduleMenu.add(trackControllerHandlerMenuItem);

        trackModelMenuItem.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        trackModelMenuItem.setText("Track Model");
        trackModelMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackModelMenuItemActionPerformed(evt);
            }
        });
        moduleMenu.add(trackModelMenuItem);

        trainHandlerMenuItem.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        trainHandlerMenuItem.setText("Train Handler");
        trainHandlerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainHandlerMenuItemActionPerformed(evt);
            }
        });
        moduleMenu.add(trainHandlerMenuItem);

        mboMenuItem.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        mboMenuItem.setText("MBO");
        mboMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mboMenuItemActionPerformed(evt);
            }
        });
        moduleMenu.add(mboMenuItem);

        greenTrackViewItem.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        greenTrackViewItem.setText("Green Track View");
        greenTrackViewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greenTrackViewItemActionPerformed(evt);
            }
        });
        moduleMenu.add(greenTrackViewItem);

        redTrackViewItem.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        redTrackViewItem.setText("Red Track View");
        redTrackViewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redTrackViewItemActionPerformed(evt);
            }
        });
        moduleMenu.add(redTrackViewItem);

        mainMenuBar.add(moduleMenu);

        mainMenuBar.add(Box.createHorizontalGlue());
        timeLabel = new JLabel("Time");
        mainMenuBar.add(timeLabel);

        setJMenuBar(mainMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Set normal time
     */
    private void normalTimeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalTimeRadioButtonActionPerformed
        this.trainSystem.updateTimer(TrainSystem.NORMAL_TIME);
    }//GEN-LAST:event_normalTimeRadioButtonActionPerformed

    /**
     * Set x10 time
     */
    private void x10SpeedRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x10SpeedRadioButtonActionPerformed
        this.trainSystem.updateTimer(TrainSystem.x10_TIME);
    }//GEN-LAST:event_x10SpeedRadioButtonActionPerformed

    /**
     * Set CTC visible
     */
    private void ctcMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctcMenuItemActionPerformed
        this.getContentPane().removeAll();
        this.getContentPane().add(this.trainSystem.getCTC(), BorderLayout.CENTER);
        this.setSize(new Dimension(275, 700));
        this.getContentPane().revalidate();
        this.getContentPane().repaint();
        this.setVisible(true);
    }//GEN-LAST:event_ctcMenuItemActionPerformed

    /**
     * Set TrackControllerHandler visible
     */
    private void trackControllerHandlerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackControllerHandlerMenuItemActionPerformed
        this.getContentPane().removeAll();
        this.getContentPane().add(this.trainSystem.getTrackControllerHandler().getTrackHandlerGUI(), BorderLayout.CENTER);
        this.setSize(new Dimension(1040, 720));
        this.getContentPane().revalidate();
        this.getContentPane().repaint();
        this.setVisible(true);
    }//GEN-LAST:event_trackControllerHandlerMenuItemActionPerformed

    /**
     * Set TrackModel visible
     */
    private void trackModelMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackModelMenuItemActionPerformed
        this.getContentPane().removeAll();
        this.getContentPane().add(this.trainSystem.getTrackModel().getGUI(), BorderLayout.CENTER);
        this.setSize(new Dimension(1040, 720));
        this.getContentPane().revalidate();
        this.getContentPane().repaint();
        this.setVisible(true);
    }//GEN-LAST:event_trackModelMenuItemActionPerformed

    /**
     * Set TrainHandler visible
     */
    private void trainHandlerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainHandlerMenuItemActionPerformed
        this.getContentPane().removeAll();
        this.getContentPane().add(this.trainSystem.getTrainHandler().getGUI(), BorderLayout.CENTER);
        this.trainSystem.getTrainHandler().getGUI().updateTrainHandlerGUI();
        this.setSize(new Dimension(1040, 720));
        this.getContentPane().revalidate();
        this.getContentPane().repaint();
        this.setVisible(true);
    }//GEN-LAST:event_trainHandlerMenuItemActionPerformed

    /**
     * Set MBO visible
     */
    private void mboMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mboMenuItemActionPerformed
        this.getContentPane().removeAll();
        try {
            this.getContentPane().add(this.trainSystem.getMBO().getGUI(), BorderLayout.CENTER);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidFormatException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setSize(new Dimension(1040, 720));
        this.getContentPane().revalidate();
        this.getContentPane().repaint();
        this.setVisible(true);
    }//GEN-LAST:event_mboMenuItemActionPerformed

    /**
     * Set x25 time
     */
    private void x25SpeedRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x25SpeedRadioButtonActionPerformed
        this.trainSystem.updateTimer(TrainSystem.x25_TIME);
    }//GEN-LAST:event_x25SpeedRadioButtonActionPerformed

    /**
     * Set x50 time
     */
    private void x50SpeedRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x50SpeedRadioButtonActionPerformed
        this.trainSystem.updateTimer(TrainSystem.x50_TIME);
    }//GEN-LAST:event_x50SpeedRadioButtonActionPerformed

    /**
     * Set x100 time
     */
    private void x100SpeedRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x100SpeedRadioButtonActionPerformed
        this.trainSystem.updateTimer(TrainSystem.x100_TIME);
    }//GEN-LAST:event_x100SpeedRadioButtonActionPerformed

    private void greenTrackViewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greenTrackViewItemActionPerformed
        // TODO add your handling code here:
        if(!this.trainSystem.getTrackViewGreen().isVisible()){
             this.trainSystem.getTrackViewGreen().displayTrackView(true);
        } else {
            this.trainSystem.getTrackViewGreen().displayTrackView(false);
        }
    }//GEN-LAST:event_greenTrackViewItemActionPerformed

    private void redTrackViewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redTrackViewItemActionPerformed
        // TODO add your handling code here:
        if(!this.trainSystem.getTrackViewRed().isVisible()){
             this.trainSystem.getTrackViewRed().displayTrackView(true);
        } else {
            this.trainSystem.getTrackViewRed().displayTrackView(false);
        }
    }//GEN-LAST:event_redTrackViewItemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ctcMenuItem;
    private javax.swing.JMenuItem greenTrackViewItem;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JMenuItem mboMenuItem;
    private javax.swing.JMenu moduleMenu;
    private javax.swing.JRadioButtonMenuItem normalTimeRadioButton;
    private javax.swing.JMenuItem redTrackViewItem;
    private javax.swing.JMenu speedMenu;
    private javax.swing.ButtonGroup timeButtonGroup;
    private javax.swing.JMenuItem trackControllerHandlerMenuItem;
    private javax.swing.JMenuItem trackModelMenuItem;
    private javax.swing.JMenuItem trainHandlerMenuItem;
    private javax.swing.JRadioButtonMenuItem x100SpeedRadioButton;
    private javax.swing.JRadioButtonMenuItem x10SpeedRadioButton;
    private javax.swing.JRadioButtonMenuItem x25SpeedRadioButton;
    private javax.swing.JRadioButtonMenuItem x50SpeedRadioButton;
    // End of variables declaration//GEN-END:variables
}
